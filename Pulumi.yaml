name: homelab-infra
runtime:
  name: python
  options:
    virtualenv: venv
description: Infra for hosting service
config:
  server:
    value:
      platform: amd64
  secret_:
    value:
      key:
        navidrome-encryption:
        paperless-ngx-secret:
      account:
        navidrome:
          hostname: public-navidrome
        ntfy:
          hostname: public-ntfy
        rclone-webdav:
          hostname: public-rclone-webdav
        jellyfin:
          hostname: private-jellyfin
        paperless-ngx:
          hostname: private-paperless-ngx
  docker:
    value:
      env:
        TZ: Etc/UTC
      image:
        tailscale:
          name: tailscale/tailscale
          tag: "v1.44.0"
        workaround:
          name: busybox
          tag: "1.35-uclibc"
        traefik:
          name: traefik
          tag: "v3.0.0-beta3"
        dozzle:
          name: amir20/dozzle
          tag: "v4.10.22"
        navidrome:
          name: deluan/navidrome
          tag: "0.49.3"
        syncthing:
          name: syncthing/syncthing
          tag: "1.23"
        rclone:
          name: rclone/rclone
          tag: "1.63"
        crowdsec:
          name: crowdsecurity/crowdsec
          tag: "v1.5.2"
        ntfy:
          name: binwiederhier/ntfy
          tag: "v2.6.2"
        wireguard:
          name: linuxserver/wireguard
          tag: "1.0.20210914"
        awscli:
          name: amazon/aws-cli
          tag: "2.13.5"
        restic:
          name: restic/restic
          tag: "0.16.0"
        socat:
          name: alpine/socat
          tag: "1.7.4.4"
        jellyfin:
          name: linuxserver/jellyfin
          tag: "10.8.10"
        redis:
          name: redis
          tag: "7.0.12-alpine3.18"
        paperless-ngx:
          name: ghcr.io/paperless-ngx/paperless-ngx
          tag: "1.16.5"
        neko-firefox:
          name: "'ghcr.io/m1k1o/neko/{}-firefox'.format('intel' if platform == 'amd64' else 'arm')"
          tag: "2.8.8"
        neko-tor-browser:
          name: "'ghcr.io/m1k1o/neko/{}-tor-browser'.format('intel' if platform == 'amd64' else 'arm')"
          tag: "2.8.8"
      build:
        backup:
          dockerfile: _data/backup/image/Dockerfile
          material:
            - _data/backup/image/requirements.txt
            - _data/backup/image/*.py
        script-server:
          dockerfile: _service/script_server/image/Dockerfile
        ttyd:
          dockerfile: _service/ttyd/image/Dockerfile
          material:
            - _service/ttyd/image/ns
        telegram:
          dockerfile: _service/telegram/image/Dockerfile
          material:
            - _service/telegram/image/requirements.txt
            - _service/telegram/image/*.py
      plugin:
        rclone:
          name: rclone/docker-volume-rclone
          version: "'{}-1.63.1'.format(platform)"
      compose:
        volume: docker-compose
  storage:
    value:
      volume:
        local:
          tailscale-state:
          traefik-config:
          traefik-cert:
          navidrome-data:
            key:
              - navidrome-encryption
          syncthing-config:
          crowdsec-data:
          ntfy-cache:
          ntfy-data:
          docker-compose:
          restic-cache:
          script-server-log:
          telegram-session:
          jellyfin-config:
          jellyfin-cache:
          jellyfin-data:
          paperless-ngx-data:
          paperless-ngx-media:
          paperless-ngx-export:
        bind:
          # https://rclone.org/docker/
          rclone-config: /var/lib/docker-plugins/rclone/config
          rclone-cache: /var/lib/docker-plugins/rclone/cache
        mount:
          music: music/original/
        crypt:
          password: crypt/password/
          media: crypt/media/
        combine:
          crypt-password: password
      container:
        tailscale:
          state:
            dir: /var/lib/tailscale/
        traefik:
          config:
            dir: /etc/traefik/config/
            ro: true
          cert:
            dir: /etc/traefik/cert/
        navidrome:
          music:
            volume: mount-music
            dir: /music/
            ro: true
          data:
            volume: navidrome-data
            dir: /data/
        rclone-webdav:
          config:
            volume: rclone-config
            dir: /etc/rclone/
            ro: true
        syncthing:
          config:
            dir: /var/syncthing/
          password:
            volume: crypt-password
            dir: /var/syncthing/data/password/
        crowdsec:
          data:
            dir: /var/lib/crowdsec/data
        ntfy:
          cache:
            dir: /var/cache/ntfy/
          data:
            dir: /var/lib/ntfy/
        script-server:
          log:
            dir: /app/logs/
          compose:
            volume: docker-compose
            dir: /app/compose/
            ro: true
        ttyd:
          compose:
            volume: docker-compose
            dir: /compose/
            ro: true
        telegram-login-code:
          session:
            volume: telegram-session
            dir: /telegram/session/
            ro: true
        jellyfin:
          config:
            dir: /config/
          cache:
            dir: /config/cache/
          data:
            dir: /config/data/
          media:
            volume: crypt-media
            dir: /media/
            ro: true
        paperless-ngx:
          data:
            dir: /usr/src/paperless/data/
          media:
            dir: /usr/src/paperless/media/
          export:
            dir: /usr/src/paperless/export/
      backup:
        common:
          prefix: /volume/
          notification:
            topic: backup
            tags:
              - daily-backup
        cache:
          volume: restic-cache
          dir: /var/cache/restic/
        service:
          navidrome:
            stop:
              - navidrome
            volume:
              data:
                path:
                  - navidrome.db
          syncthing:
            stop:
              - syncthing
            volume:
              config:
                path:
                  - config/config.xml
                  - config/key.pem
                  - config/cert.pem
          telegram:
            volume:
              session:
                path:
                  - "."
          paperless-ngx:
            volume:
              export:
                path:
                  - "."
                script_path: _data/backup/script/paperless_ngx.py
      redis:
        - paperless-ngx
  service:
    value:
      tailscale:
        port:
          internal: 444
          external: 443
        socket: /var/run/tailscale/tailscaled.sock
      traefik:
        # TODO: Upgrade to v3
        schema:
          static: https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/traefik-v2.json
          dynamic: https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/traefik-v2-file-provider.json
        plugin:
          crowdsec:
            name: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
            version: "v1.1.13"
      rclone-webdav:
        port: 8080
      script-server:
        port: 8080
        admin: admin
      ttyd:
        port: 8080
        option:
          disableReconnect: 1
          cursorStyle: bar
          fontSize: 16
          allowTransparency: 1
          drawBoldTextInBrightColors: 1
          enableTrzsz: 1
          disableLeaveAlert: 1
      telegram:
        session: /telegram/session/
        notification:
          topic: telegram
          icon: https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/240px-Telegram_logo.svg.png
